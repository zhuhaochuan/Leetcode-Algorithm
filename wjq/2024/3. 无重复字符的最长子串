示例 1:

输入: s = "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
示例 2:

输入: s = "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
示例 3:

输入: s = "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。

class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int left = 0, right = 0;
        std::unordered_map<char, int> count;
        int max_len = 0;
        while (left < s.length() && right < s.length()) {
            char c = s[right];
            count[c]++;
            while (count[c] > 1 && left < right) {
                char cur = s[left];
                count[cur]--;
                left++;
            }
            right++;
            max_len = std::max(max_len, right - left);
        }
        return max_len;
    }
};