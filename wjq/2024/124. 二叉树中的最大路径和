/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int max_path_sum = INT_MIN;
    int maxPathSum(TreeNode* root) {
        max_path(root);
        return max_path_sum;
    }
    int max_path(TreeNode* root) {
        if (root == nullptr) {
            return 0;
        }
        int left_max = max_path(root->left);
        int right_max = max_path(root->right);
        // 计算经过本节点的最优解：
        int left_mid = left_max + root->val;
        int right_mid = right_max + root->val;
        int left_right_mid = left_max + right_max + root->val;
        int only_mid = root->val;
        max_path_sum = std::max(std::max(max_path_sum, std::max(std::max(left_mid, right_mid), left_right_mid)), only_mid);
        return std::max(std::max(left_max, right_max) + root->val, root->val);
    }
};