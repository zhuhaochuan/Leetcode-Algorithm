class Solution {
public:
    int trap(vector<int>& height) {
        vector<int> leftmax(height.size(), 0);
        vector<int> rightmax(height.size(), 0);
        for (int i = 1; i < height.size(); i++) {
            leftmax[i] = std::max(leftmax[i - 1], height[i - 1]);;
        }
        for (int i = height.size() - 2; i > 0; i--) {
            rightmax[i] = std::max(rightmax[i + 1], height[i + 1]);
        }
        int res = 0;
        for (int i = 0; i < height.size(); i++) {
            res += std::max(0, std::min(leftmax[i], rightmax[i]) - height[i]);
        }
        return res;
    }
};