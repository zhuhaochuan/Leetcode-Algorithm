// [-1,0,1,2,-1,-4]
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        std::sort(nums.begin(),nums.end());
        std::vector<vector<int>> res;
        for (int i = 0; i < nums.size(); i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            int target = -nums[i];
            int left = i + 1, right = nums.size() - 1;
            while (left < right) {
                if (nums[left] + nums[right] == target) {
                    vector<int> tmp {nums[i], nums[left], nums[right]};
                    res.push_back(tmp);
                    while(left < right && nums[left+1] == nums[left]) {
                        left++;
                    }
                    left++;
                    while(left < right && nums[right-1] == nums[right]) {
                        right--;
                    }
                    right--;
                } else if (nums[left] + nums[right] < target) {
                    left++;
                } else if (nums[left] + nums[right] > target) {
                    right--;
                }
            }
        }
        return res;
    }
};
