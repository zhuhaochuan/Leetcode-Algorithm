class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        std::sort(nums.begin(), nums.end());
        for (int i = 0; i < nums.size(); i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            int target =  0 - nums[i];
            int j = i + 1;
            int k = nums.size() - 1;
            while (j < k) {
                if (nums[j] + nums[k] == target) {
                    res.push_back({nums[i], nums[j], nums[k]});
                    while (j < k) {
                        if (nums[j + 1] == nums[j]) {
                            j++;
                        } else {
                            j++;
                            break;
                        }
                    }
                    while (j < k) {
                        if (nums[k - 1] == nums[k]) {
                            k--;
                        } else {
                            k--;
                            break;
                        }
                    }
                } else if (nums[j] + nums[k] < target) {
                    j++;
                } else {
                    k--;
                }
            }
        }
        return res;
    }
};