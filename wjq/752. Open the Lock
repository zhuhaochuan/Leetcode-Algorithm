// 752. Open the Lock

class Solution {
public:
    vector<vector<int>> dir = {{0, 1}, {0, -1}, {1, 1}, {1, -1}, {2, 1}, {2, -1}, {3, 1}, {3, -1}};
    int openLock(vector<string>& deadends, string target) {
        queue<string> q;
        unordered_set<string> dead;
        unordered_set<string> vis;
        for (string str : deadends)
            dead.insert(str);
        string s = "0000";
        q.push(s);
        vis.insert(s);
        int step = 0;
        while(!q.empty()) {
            int sz = q.size();
            for (int i = 0; i < sz; i++) {
                string cur = q.front();
                q.pop();
                if (dead.find(cur) != dead.end())
                    continue;
                if (cur == target)
                    return step;
                // 8种情况
                for (vector<int> v : dir) {
                    string newState = next(cur, v);
                    if (vis.find(newState) == vis.end()) {
                        q.push(newState);
                        vis.insert(newState);
                    }
                }
            }
            step++;
        }
        return -1;
    }
    string next(string s, vector<int> d) {
        int pos = d[0];
        int add = d[1];
        if (s[pos] == '0' && add == -1) {
            s[pos] = '9';
            return s;
        }
        if (s[pos] == '9' && add == 1) {
            s[pos] = '0';
            return s;
        }
        s[pos] = s[pos] + add;
        return s;
    }

};