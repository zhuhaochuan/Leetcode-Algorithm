// 15. 3Sum

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        if (nums.size() == 0)
            return res;
        sort(nums.begin(), nums.end());
        for (int i = 0; i < (int)nums.size() - 2; i++) {
            if (i == 0 || (i != 0 && nums[i] != nums[i - 1])) {
                int target = 0 - nums[i];
                int lo = i + 1;
                int hi = nums.size() - 1;
                while (lo < hi) {
                    if (nums[lo] + nums[hi] < target)
                        lo++;
                    else if (nums[lo] + nums[hi] > target)
                        hi--;
                    else {
                        vector<int> t;
                        t.push_back(nums[i]);
                        t.push_back(nums[lo]);
                        t.push_back(nums[hi]);
                        res.push_back(t);
                        while (lo < hi && nums[lo] == nums[lo + 1])
                            lo++;
                        while (lo < hi && nums[hi] == nums[hi - 1])
                            hi--;
                        lo++;
                        hi--;
                    }
                }
            }
        }
        return res;
    }

};