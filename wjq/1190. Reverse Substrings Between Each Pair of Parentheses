// 1190. Reverse Substrings Between Each Pair of Parentheses

class Solution {
public:
    string reverseParentheses(string s) {
        stack<string> sta;
        for (int i = 0; i < s.length(); i++) {
            if (s[i] == '(') {
                sta.push("(");
            } else if (s[i] == ')') {
                string temp = "";
                while (sta.top() != "(") {
                    temp += reverseString(sta.top());
                    sta.pop();
                }
                sta.pop();
                sta.push(temp);
            } else {
                if (sta.empty() || sta.top() == "(") {
                    string temp = string(1, s[i]);
                    sta.push(temp);
                }
                else{
                    string temp = sta.top();
                    sta.pop();
                    sta.push(temp + s[i]);
                }
            }
        }
        stack<string> r;
        while (!sta.empty()) {
            r.push(sta.top());
            sta.pop();
        }
        string res = "";
        while (!r.empty()) {
            res += r.top();
            r.pop();
        }
        return res;
    }
    string reverseString(string s) {
        int i = 0, j = s.length() - 1;
        while (i < j) {
            char temp = s[i];
            s[i++] = s[j];
            s[j--] = temp;
        }
        return s;
    }
};